<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Donodoo API Documentation</title>
    <link>https://donodoo.it/</link>
    <description>Recent content on Donodoo API Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    
	<atom:link href="https://donodoo.it/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>API Reference</title>
      <link>https://donodoo.it/main/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/main/</guid>
      <description>Introduzione Benvenuto nella documentazione delle API di Donodoo!
Puoi utilizzare queste API per interagire con il tuo database in base alle regole di accesso del tuo utente.</description>
    </item>
    
    <item>
      <title>Librerie</title>
      <link>https://donodoo.it/librerie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/librerie/</guid>
      <description>Librerie  Per installare la libreria
 $ pip install OdooRPC$ composer install odoo-rpc-client Donodoo, come Odoo, espone delle API basate sui protocolli XMLRPC oppure JSONRPC. È possibile dialogare con le API tramite il meccanismo essenziale esposto nella documentazione ufficiale di Odoo anche se noi raccomandiamo di utilizzare delle librerie specifiche per semplificare l&amp;rsquo;interfacciamento.
Attualmente le librerie raccomandate e utilizzate in questa documentazione sono
 OdooRPC: libreria Python OdooRPCClient: libreria PHP</description>
    </item>
    
    <item>
      <title>Autenticazione</title>
      <link>https://donodoo.it/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/authentication/</guid>
      <description>Autenticazione  Per effettuare il login, questo è il codice:
 import odoorpc odoo = odoorpc.ODOO(host, port) odoo.login(database, username, password) user = odoo.env.user print(user.name) # name of the user connected print(user.company_id.name) # the name of its companyuse OdooRPCClient\Client; $odoo = new Client($url); $odoo-&amp;gt;login($database, $username, $password); $user = $odoo-&amp;gt;env-&amp;gt;user; echo &amp;#34;{$user-&amp;gt;name}\n&amp;#34;; echo &amp;#34;{$user-&amp;gt;company_id-&amp;gt;name}\n&amp;#34;; Prima di effettuare qualsiasi operazione tramite le API è necessario autenticarsi. Il tipo di operazioni che possono essere svolte dipendono dai permessi dell&amp;rsquo;utente utilizzato.</description>
    </item>
    
    <item>
      <title>CRUDL</title>
      <link>https://donodoo.it/crud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/crud/</guid>
      <description>CRUD Creazione  Creazione di un oggetto
 vals = { &amp;#39;firstname&amp;#39;: &amp;#39;Mario&amp;#39;, &amp;#39;lastname&amp;#39;: &amp;#39;Rossi&amp;#39;, &amp;#39;email&amp;#39;: &amp;#39;mario@rossi.it&amp;#39; } odoo.env[&amp;#39;ngo.donor&amp;#39;].create(vals)$vals = [ &amp;#39;firstname&amp;#39; =&amp;gt; &amp;#39;Mario&amp;#39;, &amp;#39;lastname&amp;#39; =&amp;gt; &amp;#39;Rossi&amp;#39;, &amp;#39;email&amp;#39; =&amp;gt; &amp;#39;mario@rossi.it&amp;#39; ] $odoo-&amp;gt;env[&amp;#39;ngo.donor&amp;#39;]-&amp;gt;create(vals)  Risposta
 12345 # Id della risorsa creata12345 # Id della risorsa creata Per creare un oggetto si utilizza il metodo create legato a tutte le risorse Donodoo. Come parametro un dizionario con i valori dell&amp;rsquo;oggetto da creare.</description>
    </item>
    
    <item>
      <title>Donatori</title>
      <link>https://donodoo.it/donors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/donors/</guid>
      <description>Donatori  Lettura di un donatore
 donor_id = odoo.env[&amp;#39;ngo.donor&amp;#39;].browse(12345)$donor_id = $odoo-&amp;gt;env[&amp;#39;ngo.donor&amp;#39;]-&amp;gt;browse(12345) L&amp;rsquo;insieme degli oggetti donatori risponde alla risorsa ngo.donor</description>
    </item>
    
    <item>
      <title>Deleghe</title>
      <link>https://donodoo.it/subscriptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/subscriptions/</guid>
      <description>Deleghe  Lettura di un donatore
 subscription_id = odoo.env[&amp;#39;sale.subscription&amp;#39;].browse(12345)$subscription_id = $odoo-&amp;gt;env[&amp;#39;sale.subscription&amp;#39;]-&amp;gt;browse(12345) L&amp;rsquo;insieme degli oggetti deleghe risponde alla risorsa sale.subscription</description>
    </item>
    
    <item>
      <title>Campagne</title>
      <link>https://donodoo.it/campaigns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/campaigns/</guid>
      <description>Campagne  Lettura di una campagna
 campaign_id = odoo.env[&amp;#39;ngo.campaign&amp;#39;].browse(12345)$campaign_id = $odoo-&amp;gt;env[&amp;#39;ngo.campaign&amp;#39;]-&amp;gt;browse(12345) L&amp;rsquo;insieme degli oggetti campagna risponde alla risorsa ngo.campaign
campaign_id = odoo.env[&amp;#39;ngo.campaign&amp;#39;].browse(12345) campaign_id.open()$campaign_id = $odoo-&amp;gt;env[&amp;#39;ngo.campaign&amp;#39;]-&amp;gt;browse(12345) $campaign_id-&amp;gt;open() Apri campagna open() Sposta una campagna dallo stato Bozza allo stato Aperto. Se presenti donatori nella lista assiciata crea automaticamente le lavorazioni relative.
campaign_id = odoo.env[&amp;#39;ngo.campaign&amp;#39;].browse(12345) campaign_id.close()$campaign_id = $odoo-&amp;gt;env[&amp;#39;ngo.campaign&amp;#39;]-&amp;gt;browse(12345) $campaign_id-&amp;gt;close() Chiudi campagna close() Sposta una campagna dallo stato Aperto allo stato Chiuso. Se presenti Lavorazioni non ancora completate le annulla automaticamente.</description>
    </item>
    
    <item>
      <title>Lavorazioni</title>
      <link>https://donodoo.it/jobs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/jobs/</guid>
      <description>Lavorazioni  Lettura di una lavorazione
 job_id = odoo.env[&amp;#39;ngo.job&amp;#39;].browse(12345)$job_id = $odoo-&amp;gt;env[&amp;#39;ngo.job&amp;#39;]-&amp;gt;browse(12345) L&amp;rsquo;insieme degli oggetti lavorazioni risponde alla risorsa ngo.job</description>
    </item>
    
    <item>
      <title>Liste</title>
      <link>https://donodoo.it/target/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://donodoo.it/target/</guid>
      <description>Liste  Lettura di una lista
 target_id = odoo.env[&amp;#39;ngo.target&amp;#39;].browse(12345)$target_id = $odoo-&amp;gt;env[&amp;#39;ngo.target&amp;#39;]-&amp;gt;browse(12345) L&amp;rsquo;insieme degli oggetti liste risponde alla risorsa ngo.target
target_id = odoo.env[&amp;#39;ngo.target&amp;#39;].browse(12345) target_id.add_donors_by_ids([123, 456, 789])$target_id = $odoo-&amp;gt;env[&amp;#39;ngo.target&amp;#39;]-&amp;gt;browse(12345) $target_id-&amp;gt;add_donors_by_ids([123, 456, 789]) Aggiungi donatori add_donors_by_ids(ids) Aggiunge donotori alla lista.
 ids: lista di id donatore da aggiungere alla lista  target_id = odoo.env[&amp;#39;ngo.target&amp;#39;].browse(12345) target_id.remove_donors_by_ids([123, 456, 789])$target_id = $odoo-&amp;gt;env[&amp;#39;ngo.target&amp;#39;]-&amp;gt;browse(12345) $target_id-&amp;gt;remove_donors_by_ids([123, 456, 789]) Rimuovi donatori remove_donors_by_ids(ids) Rimuove donotori alla lista.
 ids: lista di id donatore da rimuovere dalla lista  target_id = odoo.</description>
    </item>
    
  </channel>
</rss>